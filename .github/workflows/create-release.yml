name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Release Tag
        id: get_tag
        run: |
          MERGED_LABELS="${{ join(github.event.pull_request.labels.*.name) }}"
          echo a
          RELEASE_LABEL=$(echo $MERGED_LABELS | grep -o 'release/.*' | head -n 1)
          echo b
          TAG=''
          if [[ "$RELEASE_LABEL" =~ ^release/(.*)$ ]] && [[ BASH_REMATCH[0] != '' ]]; then
          echo c
            TAG=${BASH_REMATCH[0]}
          fi
          echo d
          if [ $TAG = '' ]; then
            echo e
            echo "::set-output name=release_tag::release/$(date +'%Y%m%d')"
          else
            echo f
            echo "::set-output name=release_tag::$TAG"
          fi
        env:
          TZ: 'Asia/Tokyo'
      - name: Tag Push Origin
        if: steps.get_tag.outputs.release_tag != ''
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch --tags
          TAG=${{ steps.get_tag.outputs.release_tag }}

          # タグが存在しない場合のみタグを作成してプッシュ
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Proceeding with the existing tag."
          else
            echo "Tag $TAG does not exist. Creating and pushing the tag."
            git tag $TAG HEAD
            git push origin $TAG
          fi

      - name: Create Release
        if: steps.get_tag.outputs.release_tag != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUTHOR: ${{ github.event.pusher.name }}
        run: |
          gh release create ${{ steps.get_tag.outputs.release_tag }} \
            --title "${{ steps.get_tag.outputs.release_tag }}" \
            --generate-notes \
            --latest
